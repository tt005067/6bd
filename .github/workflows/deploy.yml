name: Deployment
on:
  push:
    branches: #* push on these 2
      - main
      - dev
env:
  MONGODB_DB_NAME: gha-demo #* means this value is avaiable for all jobs , we can even define on each job level or step level!

jobs:
  test:
    environment: testing # ? add the environmet and the name of what we created in the repo
    env:
      # *after setting secret in the repository
      MONGODB_CLUSTER_ADDRESS: ${{ secrets.MONGODB_CLUSTER_ADDRESS }}
      MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
      MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
      PORT: 8080 #? we can set this for each job as they need!
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-deps-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run server
        run: npm start & npx wait-on http://127.0.0.1:$PORT #| to use that defined env var in the workflow for windows must be $env:PORT
      - name: Run tests
        run: npm test
      - name: Output information
        run: echo "MONGODB_USERNAME:${{ env.MONGODB_USERNAME }}" ## the other way to have access to the env vars
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: |
          echo "MONGODB_USERNAME:${{ env.MONGODB_USERNAME }}" #? here we dot have access as that env are limited to on their job and not this job
           echo "MONGODB_USERNAME:${{ env.MONGODB_DB_NAME }}" #? but this is available
           echo "MONGODB_USERNAME:$MONGODB_DB_NAME" #? but this is available

#? more infor for vars and useing https://docs.github.com/en/actions/learn-github-actions/variables

# ! but we have a problem , all these vars can be exposed in github repository , so we need a wayt to prent displaying these vals in repository. ==> Secrets! thses are kind of env vars but never will be diospled in the git repository.
# #  got repo>setting>security>secrets and vars>actions:we cann all our sensetive data , we can name them with the name of the envs or what ever we want. then we have to update our workflow file

# ? Environments : we can have multiple environmets as test production staging  and ... and based on these environments we may have diffrent database and usernames and passwords
# # so we can define environmet in repo setting , and then add diffrenet environmets and into them add specift secrets related to that environment! then we need to add environment key in the workflow , ofcousre we have some choices to do more change on the environment in repo, like wait time , branch protection and more ....
# ? ex  in Deployment branches and tags  section we choose the selected branch and then we add main , means  only if the main branch was part of the event that triggered the workflow execution,jobs that referenced the testing environment should execute. so in this workflow we sait on push main and dev , but thanx to that rul test just will be executed in the main.(And in general, this workflow can be triggered if I push to the dev branch.But thanks to this rule, this test job would not execute.)
##  if we have a dev branch and push , as we said ,tset job would not be execurted
